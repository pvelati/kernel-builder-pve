---
# yamllint disable rule:line-length
name: build_proxmox_kernel_5.15

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:  # Trigger manually from github
  repository_dispatch:
    types: [trigger_build]

env:
  # OS_CODENAME: ${{ github.event.client_payload.repository.codename }}
  OS_CODENAME: bullseye
  # ARCH: ${{ github.event.client_payload.repository.arch }}
  REPO_TARGET: pvelati/apt-repository
  KERNEL_TARGET: 5.15

jobs:
  build:
    strategy:
      matrix:
        BUILD_ARCH: [broadwell, silvermont]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/pvelati/docker-debian-pve-builder:main
      volumes:
        - /opt:/sys_root/opt
        - /usr/local/lib:/sys_root/usr/local/lib
        - /usr/local/share:/sys_root/usr/local/share
        - /usr/share:/sys_root/usr/share
    steps:
      - name: Maximize space on runner
        run: |
          rm -rf /sys_root/opt/az /sys_root/opt/google /sys_root/opt/hhvm /sys_root/opt/hostedtoolcache /sys_root/opt/microsoft /sys_root/opt/mssql-tools /sys_root/opt/pipx /sys_root/opt/pipx_bin /sys_root/opt/post-generation /sys_root/opt/vsts
          rm -rf /sys_root/usr/local/lib/R /sys_root/usr/local/lib/android /sys_root/usr/local/lib/heroku /sys_root/usr/local/lib/lein /sys_root/usr/local/lib/node_modules /sys_root/usr/local/lib/python*
          rm -rf /sys_root/usr/local/share/applications /sys_root/usr/local/share/chrom* /sys_root/usr/local/share/cmake* /sys_root/usr/local/share/fonts /sys_root/usr/local/share/*_driver /sys_root/usr/local/share/man /sys_root/usr/local/share/phantom*
          rm -rf /sys_root/usr/share/dotnet /sys_root/usr/share/host /sys_root/usr/share/packs /sys_root/usr/share/sdk* /sys_root/usr/share/shared /sys_root/usr/share/templates

      - uses: actions/checkout@v3

      - name: Define BUILD_ARCH
        run: |
          echo ${{ matrix.BUILD_ARCH }} > build_arch
          echo "BUILD_ARCH=$(cat build_arch)" >> $GITHUB_ENV

      - name: Exec script
        run: |-
          ./scripts/build.sh

      - name: Build metapackage
        working-directory: ./metapackage
        run: |
          echo "CPU_ARCH=$(ls ../pve-kernel/pve-kernel-libc*.deb | cut -d '_' -f3 | cut -d '.' -f1)" >> $GITHUB_ENV
          export KERNEL_VERSION=$(ls ../pve-kernel/pve-kernel-libc*.deb | cut -d '_' -f2)
          echo "KERNEL_VERSION=$(echo $KERNEL_VERSION)" >> $GITHUB_ENV
          export META_VERSION=$(date -u +%y%m%d%H%M)
          echo "META_VERSION=$(echo $META_VERSION)" >> $GITHUB_ENV
          cat ns-control-TEMPLATE | envsubst > ns-control
          equivs-build ns-control

      - name: Release packages
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: false
          tag_name: ${{ env.BUILD_ARCH }}-${{ env.KERNEL_VERSION }}-${{ env.META_VERSION }}
          body: |
            Metapackage for pve-kernel:
            * Version: ${{ env.META_VERSION }}
            * Kernel: ${{ env.KERNEL_VERSION }}
            * Distribution: ${{ env.OS_CODENAME }}
            * Arch: ${{ env.CPU_ARCH }}
            * March: ${{ env.BUILD_ARCH }}
          files: |
            pve-kernel/pve-*.deb
            metapackage/pve-kernel-*_all.deb

      - name: Trigger repository action
        run: |
          curl -X POST -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN_TRIGGER }}" https://api.github.com/repos/${{ env.REPO_TARGET }}/dispatches \
            -d '{"event_type":"trigger_build","client_payload":{"repository":{"codename":"${{ env.OS_CODENAME }}","owner":"${{ github.repository_owner }}","name":"${{ github.repository }}","tag":"${{ env.BUILD_ARCH }}-${{ env.KERNEL_VERSION }}-${{ env.META_VERSION }}"}}}'
# yamllint enable rule:line-length
